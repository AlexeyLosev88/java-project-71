plugins {
    id 'application'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'
application { mainClass.set("hexlet.code.App") }

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.apache.commons:commons-lang3:3.14.0')
    implementation('org.apache.commons:commons-collections4:4.4')
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation("org.assertj:assertj-core:3.21.0")
    implementation 'info.picocli:picocli:4.7.6'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.3'
    //implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    //implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.4'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.15.2'

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

/*
test {
    useJUnitPlatform()
    // https://technology.lastminute.com/junit5-kotlin-and-gradle-dsl/
    testLogging {
        exceptionFormat = TestExceptionFormat.FULL
        events = mutableSetOf(TestLogEvent.FAILED, TestLogEvent.PASSED, TestLogEvent.SKIPPED)
        // showStackTraces = true
        // showCauses = true
        showStandardStreams = true
    }
}
*/
jacocoTestReport { reports { xml.required.set(true) } }